"use strict";

var ensureString       = require("es5-ext/object/validate-stringifiable-value")
  , reEscape           = require("es5-ext/reg-exp/escape")
  , deferred           = require("deferred")
  , resolve            = require("path").resolve
  , sep                = require("path").sep
  , lstat              = require("fs2/lstat")
  , writeFile          = require("fs2/write-file")
  , resolveModulePaths = require("./resolve-module-paths")
  , testIndexName      = require("./lib/test-index-name")

  , push = Array.prototype.push
  , sepRe = new RegExp(reEscape(sep), "g");

module.exports = function (path) {
	path = resolve(ensureString(path));
	return resolveModulePaths(path)(function (modulePaths) {
		var testPath = resolve(path, "test"), modulesTestsData = [];

		return deferred.map(modulePaths, function (modulePath) {
			return lstat(resolve(testPath, modulePath))(function (stats) {
				return stats.isFile();
			}, function (err) {
				if (err.code === "ENOENT") return false;
				throw err;
			})(function (isTest) {
				if (isTest) {
					modulesTestsData.push("require(" + JSON.stringify("./test/" +
						modulePath.replace(sepRe, "/")) + ");");
					return "\tt.pass(" + JSON.stringify("Tests found for '" + modulePath + "'") +
						");";
				}
				return "\tt.fail(" + JSON.stringify("Tests missing for '" + modulePath + "'") +
					");";
			});
		})(function (indexTestsData) {
			var srcCode = ["// DO NOT EDIT: FILE GENERATED BY 'tape-index'", "", "\"use strict\";",
				"", "Error.stackTraceLimit = Infinity;", ""];

			srcCode.push("", "var test = require(\"tape\");");

			srcCode.push("", "test(\"Modules coverage\", function (t) {");
			push.apply(srcCode, indexTestsData);
			srcCode.push("\tt.end();", "});");

			srcCode.push("", "// Actual tests");
			push.apply(srcCode, modulesTestsData);
			srcCode.push("");

			return writeFile(resolve(path, testIndexName + ".js"), srcCode.join("\n"));
		});
	});
};
